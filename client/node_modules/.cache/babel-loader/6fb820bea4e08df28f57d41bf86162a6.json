{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jessicawillis/connecting-gardens/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jessicawillis/connecting-gardens/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jessicawillis/connecting-gardens/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jessicawillis/connecting-gardens/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jessicawillis/connecting-gardens/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jessicawillis/connecting-gardens/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jessicawillis/connecting-gardens/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jessicawillis/connecting-gardens/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ListItem from './ListItem.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      list: '',\n      post: '',\n      responseToPost: ''\n    };\n    _this.callApi =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/hello');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _context2.next = 3;\n                return fetch('/api/addItem', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: _this.state.post\n                  })\n                });\n\n              case 3:\n                response = _context2.sent;\n                _context2.next = 6;\n                return response.text().then(_this.updateTodoList());\n\n              case 6:\n                body = _context2.sent;\n\n                _this.setState({\n                  responseToPost: body,\n                  post: ''\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateTodoList();\n    }\n  }, {\n    key: \"updateTodoList\",\n    value: function updateTodoList() {\n      var _this2 = this;\n\n      this.callApi().then(function (res) {\n        return _this2.setState({\n          list: res.toDoList\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.response);\n      console.log(\"render\");\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"To Do List\")), React.createElement(\"ul\", {\n        className: \"to-do-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Post to Server:\")), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.post,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            post: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.responseToPost));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jessicawillis/connecting-gardens/client/src/App.js"],"names":["React","Component","ListItem","App","state","list","post","responseToPost","callApi","fetch","response","json","body","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","then","updateTodoList","setState","res","toDoList","catch","err","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ListItem from './ListItem.js';\n\nclass App extends Component {\n  state = {\n    list: '',\n    post: '',\n    responseToPost: ''\n  };\n\n  componentDidMount() {\n    this.updateTodoList();\n  }\n\n  updateTodoList() {\n    this.callApi()\n      .then(res => this.setState({ list: res.toDoList }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/addItem', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post })\n    });\n    const body = await response.text()\n     .then(this.updateTodoList());\n\n    this.setState({ responseToPost: body, post: '' });\n  };\n\n  render() {\n    console.log(this.state.response);\n    console.log(\"render\");\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>To Do List</h1>\n        </header>\n        <ul className=\"to-do-list\">\n       {/*{this.state.list.length > 0 &&this.state.list.map((listItem, index) => (*/}\n          {/*<ListItem text={listItem} />*/}\n        {/*))}*/}\n          \n        </ul>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button className=\"submit-button\" type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}